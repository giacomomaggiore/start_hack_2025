{
    "openapi": "3.1.0",
    "info": {
        "title": "IDChat_Agent",
        "description": "# **Interaction with SIX ID API Agent**\n## **Available methods**:\n- **query**: Query the graph.\n- **searchwithcriteria**: Search companies that fulfill several criteria.\n- **ohlcv**: Get historical price data.\n- **companydatasearch**: Get information about one or more companies.\n- **summary**: Get basic information about a company.\n- **llm**: Query OpenAI 4o model.\n\n## **Python interaction**:\n```python\ndef get_response(query:str):\n    url = (\"https://idchat-api-containerapp01-dev.orangepebble-16234c4b.\"\n           f\"switzerlandnorth.azurecontainerapps.io//query?query={query}\")\n\n    response = requests.post(url)\n    return response.json()\n\ndef searchwithcriteria(query):\n    url = (\"https://idchat-api-containerapp01-dev.orangepebble-16234c4b.\"\n           \"switzerlandnorth.azurecontainerapps.io//searchwithcriteria\"\n           f\"?query={query}\")\n    response = requests.post(url)\n    return response.json()\n\ndef ohlcv(query, first=\"01.01.2024\", last=None):\n    url = (\"https://idchat-api-containerapp01-dev.orangepebble-16234c4b.\"\n           \"switzerlandnorth.azurecontainerapps.io//ohlcv\"\n           f\"?query={query}&first={first}\")\n    if last:\n        url = f\"{url}&last={last}\"\n    response = requests.post(url)\n    return response.json()\n\ndef companydatasearch(query:str):\n    url = (\"https://idchat-api-containerapp01-dev.orangepebble-16234c4b.\"\n           \"switzerlandnorth.azurecontainerapps.io//companydatasearch\"\n           f\"?query={query}\")\n    response = requests.post(url)\n    return response.json()\n\ndef summary(query:str):\n    url = (\"https://idchat-api-containerapp01-dev.orangepebble-16234c4b.\"\n           \"switzerlandnorth.azurecontainerapps.io//summary\"\n           f\"?query={query}\")\n    response = requests.post(url)\n    return response.json()\n```\n## **Response interpretation**:\n### Query:\n- It returns a json object that contains a \"messages\" key with a message list.\n- Each message contains a 'content' and a 'type' key.\n    - 'content' is the natural text message.\n    - 'type' is the type emitter, can be 'human' 'ai' or 'tool'\n- AI messages also contain an 'item' key with the data returned from the API.\n- Usually the 2nd message contains the AI message with the data.\n- A standard way to access table data like this might be:\n```python\npd.read_json(json.loads(response['messages'][2]['item'])['data'][0])\n```\n### Other Endpoints:\nEndpoints that are related to specific tools return a single json object with\na *\"message\"* and a *\"object\"* keys. \"message\" is the natural language summary\nthat the agent usually sees, while object contains the full API information.\n",
        "version": "0.1.0"
    },
    "paths": {
        "/": {
            "get": {
                "summary": "Root",
                "operationId": "root__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "summary": "Health Check",
                "description": "Returns the health status of the agent.",
                "operationId": "health_check_health_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/restart_agent": {
            "post": {
                "summary": "Restart Agent Endpoint",
                "description": "Endpoint to manually restart the agent with a password.",
                "operationId": "restart_agent_endpoint_restart_agent_post",
                "parameters": [
                    {
                        "name": "request",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/llm": {
            "post": {
                "summary": "Llm",
                "description": "Query the LLM for a normal query.",
                "operationId": "llm_llm_post",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Query"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/query": {
            "post": {
                "summary": "Query",
                "description": "Query the graph. Query is a string like:\n\"get me the prices of banco santander since 2019\".",
                "operationId": "query_query_post",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Query"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/searchwithcriteria": {
            "post": {
                "summary": "Searchwithcriteria",
                "description": "Search with criteria. Query is a string with a dict schema like:\n'{\"criteria\": \"logical value\"}'.\n\nFor example:\n '{\"ebitda\": \"is positive\", \"employees\": \"more than 10000\"}'.",
                "operationId": "searchwithcriteria_searchwithcriteria_post",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Query"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ohlcv": {
            "post": {
                "summary": "Ohlcv",
                "description": "Price Data. Search a company by name and get its historical price data.\nQuery is a string like: \"banco santander\", first is the first date to\n retrieve data and last(optional) is the last date to retrieve data. Dates\n are strings in the format \"dd.mm.yyyy\".",
                "operationId": "ohlcv_ohlcv_post",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Query"
                        }
                    },
                    {
                        "name": "first",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "default": "01.01.2024",
                            "title": "First"
                        }
                    },
                    {
                        "name": "last",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "title": "Last"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companydatasearch": {
            "post": {
                "summary": "Companydatasearch",
                "description": "This tool is useful when you need information about one or more\ncompanies, such as employee numbers, market or financial information,\nratios, fundamentals, etc. Input the query in the following format:\n'{\"company1\": \"information to retrieve|yyyyQq\";\n \"company2\": \"information to retrieve|yyyy\"}'.\n\n Example: '{\"Caixabank\": \"number of employees|2023\";\n \"BBVA\": \"number of employees|2023\"}'.",
                "operationId": "companydatasearch_companydatasearch_post",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Query"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/summary": {
            "post": {
                "summary": "Summary",
                "description": "This tools retrieves basic information about a company.\nQuery is the name of the company to search.",
                "operationId": "summary_summary_post",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Query"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        }
    }
}